{"ast":null,"code":"var _jsxFileName = \"/Users/mannormal/star-ai-assistant/frontend/src/components/Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Message from './Message';\nimport HintInput from './HintInput';\nimport ModelSelector from './ModelSelector';\nimport ModeSelector from './ModeSelector';\nimport { sendMessage, getModels, getModes } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Chat() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [inputMessage, setInputMessage] = useState('');\n  const [hint, setHint] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [models, setModels] = useState([]);\n  const [modes, setModes] = useState([]);\n  const [selectedModel, setSelectedModel] = useState('');\n  const [selectedMode, setSelectedMode] = useState('');\n  useEffect(() => {\n    async function fetchModelsModes() {\n      try {\n        const fetchedModels = await getModels();\n        const fetchedModes = await getModes();\n        setModels(fetchedModels);\n        setModes(fetchedModes);\n      } catch (error) {\n        console.error('获取模型和模式失败:', error);\n        setError('获取模型和模式失败，请刷新页面重试。');\n      }\n    }\n    fetchModelsModes();\n  }, []);\n  const handleSendMessage = async () => {\n    if (inputMessage.trim() === '' || !selectedModel || !selectedMode) return;\n    const newMessage = {\n      role: 'user',\n      content: inputMessage\n    };\n    setMessages([...messages, newMessage]);\n    setInputMessage('');\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await sendMessage(selectedModel, selectedMode, inputMessage, hint);\n      setMessages(prevMessages => [...prevMessages, {\n        role: 'assistant',\n        content: response.message\n      }]);\n    } catch (error) {\n      console.error('发送消息时出错:', error);\n      setError('发送消息失败，请稍后重试。');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleKeyPress = event => {\n    if (event.key === 'Enter') {\n      handleSendMessage();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat\",\n    children: [/*#__PURE__*/_jsxDEV(ModelSelector, {\n      models: models,\n      selectedModel: selectedModel,\n      setSelectedModel: setSelectedModel\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ModeSelector, {\n      modes: modes,\n      selectedMode: selectedMode,\n      setSelectedMode: setSelectedMode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message-list\",\n      children: [messages.map((message, index) => /*#__PURE__*/_jsxDEV(Message, {\n        message: message\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this)), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading\",\n        children: \"AI\\u6B63\\u5728\\u601D\\u8003\\u4E2D...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 23\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-area\",\n      children: [/*#__PURE__*/_jsxDEV(HintInput, {\n        hint: hint,\n        setHint: setHint\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: inputMessage,\n        onChange: e => setInputMessage(e.target.value),\n        onKeyPress: handleKeyPress,\n        placeholder: \"\\u8F93\\u5165\\u4F60\\u7684\\u6D88\\u606F...\",\n        disabled: !selectedModel || !selectedMode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSendMessage,\n        disabled: isLoading || !selectedModel || !selectedMode,\n        children: \"\\u53D1\\u9001\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n_s(Chat, \"JyjsoDcTbu0IdQ3Jurz06D1QDwo=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useEffect","Message","HintInput","ModelSelector","ModeSelector","sendMessage","getModels","getModes","jsxDEV","_jsxDEV","Chat","_s","messages","setMessages","inputMessage","setInputMessage","hint","setHint","isLoading","setIsLoading","error","setError","models","setModels","modes","setModes","selectedModel","setSelectedModel","selectedMode","setSelectedMode","fetchModelsModes","fetchedModels","fetchedModes","console","handleSendMessage","trim","newMessage","role","content","response","prevMessages","message","handleKeyPress","event","key","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","type","value","onChange","e","target","onKeyPress","placeholder","disabled","onClick","_c","$RefreshReg$"],"sources":["/Users/mannormal/star-ai-assistant/frontend/src/components/Chat.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Message from './Message';\nimport HintInput from './HintInput';\nimport ModelSelector from './ModelSelector';\nimport ModeSelector from './ModeSelector';\nimport { sendMessage, getModels, getModes } from '../services/api';\n\nfunction Chat() {\n  const [messages, setMessages] = useState([]);\n  const [inputMessage, setInputMessage] = useState('');\n  const [hint, setHint] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [models, setModels] = useState([]);\n  const [modes, setModes] = useState([]);\n  const [selectedModel, setSelectedModel] = useState('');\n  const [selectedMode, setSelectedMode] = useState('');\n\n  useEffect(() => {\n    async function fetchModelsModes() {\n      try {\n        const fetchedModels = await getModels();\n        const fetchedModes = await getModes();\n        setModels(fetchedModels);\n        setModes(fetchedModes);\n      } catch (error) {\n        console.error('获取模型和模式失败:', error);\n        setError('获取模型和模式失败，请刷新页面重试。');\n      }\n    }\n    fetchModelsModes();\n  }, []);\n\n  const handleSendMessage = async () => {\n    if (inputMessage.trim() === '' || !selectedModel || !selectedMode) return;\n\n    const newMessage = { role: 'user', content: inputMessage };\n    setMessages([...messages, newMessage]);\n    setInputMessage('');\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      const response = await sendMessage(selectedModel, selectedMode, inputMessage, hint);\n      setMessages((prevMessages) => [\n        ...prevMessages,\n        { role: 'assistant', content: response.message }\n      ]);\n    } catch (error) {\n      console.error('发送消息时出错:', error);\n      setError('发送消息失败，请稍后重试。');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleKeyPress = (event) => {\n    if (event.key === 'Enter') {\n      handleSendMessage();\n    }\n  };\n\n  return (\n    <div className=\"chat\">\n      <ModelSelector \n        models={models} \n        selectedModel={selectedModel} \n        setSelectedModel={setSelectedModel} \n      />\n      <ModeSelector \n        modes={modes} \n        selectedMode={selectedMode} \n        setSelectedMode={setSelectedMode} \n      />\n      <div className=\"message-list\">\n        {messages.map((message, index) => (\n          <Message key={index} message={message} />\n        ))}\n        {isLoading && <div className=\"loading\">AI正在思考中...</div>}\n        {error && <div className=\"error\">{error}</div>}\n      </div>\n      <div className=\"input-area\">\n        <HintInput hint={hint} setHint={setHint} />\n        <input\n          type=\"text\"\n          value={inputMessage}\n          onChange={(e) => setInputMessage(e.target.value)}\n          onKeyPress={handleKeyPress}\n          placeholder=\"输入你的消息...\"\n          disabled={!selectedModel || !selectedMode}\n        />\n        <button \n          onClick={handleSendMessage} \n          disabled={isLoading || !selectedModel || !selectedMode}\n        >\n          发送\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default Chat;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}