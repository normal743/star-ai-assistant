{"ast":null,"code":"var _jsxFileName = \"/Users/mannormal/star-ai-assistant/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Chat from './components/Chat';\nimport ModeSelector from './components/ModeSelector';\nimport ModelSelector from './components/ModelSelector';\nimport { getModels, getModes, testApiConnection } from './services/api';\nimport './styles/App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [selectedModel, setSelectedModel] = useState('');\n  const [selectedMode, setSelectedMode] = useState('');\n  const [models, setModels] = useState([]);\n  const [modes, setModes] = useState([]);\n  const [apiStatus, setApiStatus] = useState('未测试');\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        // 测试 API 连接\n        const testResult = await testApiConnection();\n        setApiStatus(`API 连接测试成功: ${testResult}`);\n        console.log('API connection test result:', testResult);\n\n        // 获取模型和模式\n        const fetchedModels = await getModels();\n        const fetchedModes = await getModes();\n        console.log('Fetched models:', fetchedModels);\n        console.log('Fetched modes:', fetchedModes);\n        setModels(fetchedModels);\n        setModes(fetchedModes);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n        setApiStatus(`API 连接错误: ${error.message}`);\n      }\n    }\n    fetchData();\n  }, []);\n  console.log('Current models state:', models);\n  console.log('Current modes state:', modes);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Star AI Assistant\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"API \\u72B6\\u6001: \", apiStatus]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(ModelSelector, {\n        models: models,\n        selectedModel: selectedModel,\n        setSelectedModel: setSelectedModel\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ModeSelector, {\n        modes: modes,\n        selectedMode: selectedMode,\n        setSelectedMode: setSelectedMode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), selectedModel && selectedMode && /*#__PURE__*/_jsxDEV(Chat, {\n        model: selectedModel,\n        mode: selectedMode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"IUx8zg22Bqx+LoahZSJUr8+7GTI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Chat","ModeSelector","ModelSelector","getModels","getModes","testApiConnection","jsxDEV","_jsxDEV","App","_s","selectedModel","setSelectedModel","selectedMode","setSelectedMode","models","setModels","modes","setModes","apiStatus","setApiStatus","fetchData","testResult","console","log","fetchedModels","fetchedModes","error","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","model","mode","_c","$RefreshReg$"],"sources":["/Users/mannormal/star-ai-assistant/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Chat from './components/Chat';\nimport ModeSelector from './components/ModeSelector';\nimport ModelSelector from './components/ModelSelector';\nimport { getModels, getModes, testApiConnection } from './services/api';\nimport './styles/App.css';\n\nfunction App() {\n  const [selectedModel, setSelectedModel] = useState('');\n  const [selectedMode, setSelectedMode] = useState('');\n  const [models, setModels] = useState([]);\n  const [modes, setModes] = useState([]);\n  const [apiStatus, setApiStatus] = useState('未测试');\n\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        // 测试 API 连接\n        const testResult = await testApiConnection();\n        setApiStatus(`API 连接测试成功: ${testResult}`);\n        console.log('API connection test result:', testResult);\n\n        // 获取模型和模式\n        const fetchedModels = await getModels();\n        const fetchedModes = await getModes();\n        \n        console.log('Fetched models:', fetchedModels);\n        console.log('Fetched modes:', fetchedModes);\n        \n        setModels(fetchedModels);\n        setModes(fetchedModes);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n        setApiStatus(`API 连接错误: ${error.message}`);\n      }\n    }\n    fetchData();\n  }, []);\n\n  console.log('Current models state:', models);\n  console.log('Current modes state:', modes);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>Star AI Assistant</h1>\n        <p>API 状态: {apiStatus}</p>\n      </header>\n      <main>\n        <ModelSelector \n          models={models} \n          selectedModel={selectedModel} \n          setSelectedModel={setSelectedModel} \n        />\n        <ModeSelector \n          modes={modes} \n          selectedMode={selectedMode} \n          setSelectedMode={setSelectedMode} \n        />\n        {selectedModel && selectedMode && (\n          <Chat \n            model={selectedModel} \n            mode={selectedMode} \n          />\n        )}\n      </main>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}