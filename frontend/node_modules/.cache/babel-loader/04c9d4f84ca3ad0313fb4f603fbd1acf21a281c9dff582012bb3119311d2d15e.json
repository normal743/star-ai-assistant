{"ast":null,"code":"var _jsxFileName = \"/Users/mannormal/star-ai-assistant/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Chat from './components/Chat';\nimport ModeSelector from './components/ModeSelector';\nimport ModelSelector from './components/ModelSelector';\nimport { getModels, getModes } from './services/api';\nimport './styles/App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [selectedModel, setSelectedModel] = useState('');\n  const [selectedMode, setSelectedMode] = useState('');\n  const [models, setModels] = useState([]);\n  const [modes, setModes] = useState([]);\n  useEffect(() => {\n    async function fetchModelsModes() {\n      try {\n        const fetchedModels = await getModels();\n        const fetchedModes = await getModes();\n        console.log('Fetched models:', fetchedModels);\n        console.log('Fetched modes:', fetchedModes);\n        setModels(fetchedModels);\n        setModes(fetchedModes);\n      } catch (error) {\n        console.error('Error fetching models or modes:', error);\n      }\n    }\n    fetchModelsModes();\n  }, []);\n  console.log('Current models state:', models);\n  console.log('Current modes state:', modes);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Star AI Assistant\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(ModelSelector, {\n        models: models,\n        selectedModel: selectedModel,\n        setSelectedModel: setSelectedModel\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ModeSelector, {\n        modes: modes,\n        selectedMode: selectedMode,\n        setSelectedMode: setSelectedMode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), selectedModel && selectedMode && /*#__PURE__*/_jsxDEV(Chat, {\n        model: selectedModel,\n        mode: selectedMode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"gMIn4F0zrCcp4/tl+tUBlGLrTEg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Chat","ModeSelector","ModelSelector","getModels","getModes","jsxDEV","_jsxDEV","App","_s","selectedModel","setSelectedModel","selectedMode","setSelectedMode","models","setModels","modes","setModes","fetchModelsModes","fetchedModels","fetchedModes","console","log","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","model","mode","_c","$RefreshReg$"],"sources":["/Users/mannormal/star-ai-assistant/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Chat from './components/Chat';\nimport ModeSelector from './components/ModeSelector';\nimport ModelSelector from './components/ModelSelector';\nimport { getModels, getModes } from './services/api';\nimport './styles/App.css';\n\nfunction App() {\n  const [selectedModel, setSelectedModel] = useState('');\n  const [selectedMode, setSelectedMode] = useState('');\n  const [models, setModels] = useState([]);\n  const [modes, setModes] = useState([]);\n\n  useEffect(() => {\n    async function fetchModelsModes() {\n      try {\n        const fetchedModels = await getModels();\n        const fetchedModes = await getModes();\n        console.log('Fetched models:', fetchedModels);\n        console.log('Fetched modes:', fetchedModes);\n        setModels(fetchedModels);\n        setModes(fetchedModes);\n      } catch (error) {\n        console.error('Error fetching models or modes:', error);\n      }\n    }\n    fetchModelsModes();\n  }, []);\n\n  console.log('Current models state:', models);\n  console.log('Current modes state:', modes);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>Star AI Assistant</h1>\n      </header>\n      <main>\n        <ModelSelector \n          models={models} \n          selectedModel={selectedModel} \n          setSelectedModel={setSelectedModel} \n        />\n        <ModeSelector \n          modes={modes} \n          selectedMode={selectedMode} \n          setSelectedMode={setSelectedMode} \n        />\n        {selectedModel && selectedMode && (\n          <Chat \n            model={selectedModel} \n            mode={selectedMode} \n          />\n        )}\n      </main>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}